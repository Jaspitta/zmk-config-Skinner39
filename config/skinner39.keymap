#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        desktop_right: desktop_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp RIGHT &kt LCTRL>;
            label = "DESKTOP_RIGHT";
        };

        desktop_left: desktop_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp LEFT &kt LCTRL>;
            label = "DESKTOP_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q   &lt 4 W           &lt 3 E             &kp R           &kp T                             &kp Y      &kp U            &kp I                &lt 2 O            &kp P
  &kp A   &mt LEFT_SHIFT S  &mt LEFT_CONTROL D  &mt LEFT_ALT F  &kp G                             &kp H      &mt RIGHT_ALT J  &mt RIGHT_CONTROL K  &mt RIGHT_SHIFT L  &kp SEMI
  &kp Z   &kp X             &kp C               &kp V           &kp B                             &kp N      &kp M            &kp COMMA            &kp PERIOD         &kp SLASH
  &trans  &trans            &trans              &kp LGUI        &kp TAB  &lt 1 ESCAPE  &kp ENTER  &kp SPACE                                                           &trans
            >;
        };

        mouse_media {
            bindings = <
  &trans  &mkp LCLK  &kp UP_ARROW    &mkp RCLK        &msc SCRL_UP                            &kp PAGE_UP    &mkp MB5        &trans  &trans  &trans
  &trans  &kp LEFT   &kp DOWN_ARROW  &kp RIGHT_ARROW  &msc SCRL_DOWN                          &kp PAGE_DOWN  &mkp MB4        &trans  &trans  &trans
  &trans  &trans     &mkp MCLK       &msc SCRL_LEFT   &msc SCRL_RIGHT                         &desktop_left  &desktop_right  &trans  &trans  &trans
  &trans  &trans     &trans          &kp LEFT_GUI     &kp TAB          &trans  &kp BACKSPACE  &kp SPACE                                      &trans
            >;
        };

        numbers {
            bindings = <
  &trans  &kp N1  &kp N2  &kp N3    &trans                         &trans     &kp LCTRL  &kp LEFT_SHIFT  &trans  &trans
  &trans  &kp N4  &kp N5  &kp N6    &trans                         &trans     &kp LALT   &trans          &trans  &trans
  &trans  &kp N7  &kp N8  &kp N9    &kp N0                         &trans     &kp DEL    &trans          &trans  &trans
  &trans  &trans  &trans  &kp LGUI  &kp TAB  &lt 1 ESC  &kp ENTER  &kp SPACE                                     &trans
            >;
        };

        function_layer {
            bindings = <
  &trans  &trans  &trans  &kp LSHFT  &kp LCTRL                      &kp F1    &kp F2   &kp F3   &kp F4   &trans
  &trans  &trans  &trans  &trans     &kp LALT                       &kp F5    &kp F6   &kp F7   &kp F8   &trans
  &trans  &trans  &trans  &trans     &kp BSPC                       &kp F9    &kp F10  &kp F11  &kp F12  &trans
  &trans  &trans  &trans  &kp LGUI   &kp TAB    &kp ESC  &kp ENTER  &kp BSPC                             &trans
            >;
        };

        symbols {
            bindings = <
  &trans  &trans  &kp LSHFT  &kp LCTRL  &trans                       &kp SEMI   &kp LBKT              &kp RBKT               &kp COMMA  &mt LEFT_SHIFT NUMBER_1
  &trans  &trans  &trans     &kp LALT   &trans                       &kp APOS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOT    &mt LSHFT N7
  &trans  &trans  &trans     &kp BSPC   &trans                       &kp MINUS  &kp EQUAL             &kp ASTERISK           &kp GRAVE  &kp BSLH
  &trans  &trans  &trans     &kp LGUI   &kp TAB  &kp ESC  &kp ENTER  &kp SPACE                                                          &trans
            >;
        };
    };
};
